AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    Stack that deploys a bucket which you can use as a target for your
    Amazon CloudFront access logs (use the prefix 'new/'). An event
    notification is configured so that new objects created will fire an
    AWS Lambda function that moves the objects to prefixes (under
    'partitioned-gz/') that adhere to the Apache Hive partitioning format.
    This way the data is easier to consume for big data tools (as Amazon
    Athena and AWS Glue).

Parameters:
  ResourcePrefix: 
    Type: String
    Default: 'myapp'
    AllowedPattern: '[a-z0-9]+'
    MinLength: 1
    MaxLength: 20
    Description: >
        Prefix that is used for the created resources (20 chars, a-z and 0-9 only)
  NewKeyPrefix: 
    Type: String
    Default: 'new/'
    AllowedPattern: '[A-Za-z0-9\-]+/'
    Description: >
        Prefix of new access log files that are written by Amazon CloudFront.
        Including the trailing slash.
  GzKeyPrefix: 
    Type: String
    Default: 'partitioned-gz/'
    AllowedPattern: '[A-Za-z0-9\-]+/'
    Description: >
        Prefix of gzip'ed access log files that are moved to the Apache Hive
        like style. Including the trailing slash.

Resources:
    MoveNewAccessLogsFn:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: functions/
            Handler: moveAccessLogs.handler
            Runtime: nodejs12.x
            Timeout: 30
            Policies:
            - Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - s3:GetObject
                    - s3:DeleteObject
                  Resource: !Sub "arn:${AWS::Partition}:s3:::${ResourcePrefix}-${AWS::AccountId}-cf-access-logs/${NewKeyPrefix}*"
                - Effect: Allow
                  Action:
                    - s3:PutObject
                  Resource: !Sub "arn:${AWS::Partition}:s3:::${ResourcePrefix}-${AWS::AccountId}-cf-access-logs/${GzKeyPrefix}*"
            Environment:
                Variables:
                    TARGET_KEY_PREFIX: !Ref GzKeyPrefix
            Events:
                AccessLogsUploadedEvent:
                    Type: S3
                    Properties:
                        Bucket: !Ref CloudFrontAccessLogsBucket 
                        Events: s3:ObjectCreated:*
                        Filter:
                            S3Key:
                                Rules:
                                - Name: prefix
                                  Value: !Ref NewKeyPrefix
    CloudFrontAccessLogsBucket:
        Type: "AWS::S3::Bucket"
        Description: "Bucket for Amazon CloudFront access logs"
        Properties:
            BucketName: !Sub "${ResourcePrefix}-${AWS::AccountId}-cf-access-logs"
            BucketEncryption:
              ServerSideEncryptionConfiguration:
              - ServerSideEncryptionByDefault:
                  SSEAlgorithm: AES256
            PublicAccessBlockConfiguration:
              BlockPublicAcls: Yes
              BlockPublicPolicy: Yes
              IgnorePublicAcls: Yes
              RestrictPublicBuckets: Yes
    CloudFrontAccessLogsBucketPolicy:
      Type: "AWS::S3::BucketPolicy"
      Properties:
        Bucket: !Ref CloudFrontAccessLogsBucket
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: Deny
            Principal: "*"
            Action: s3:*
            Resource:
            - !Sub "${CloudFrontAccessLogsBucket.Arn}"
            - !Sub "${CloudFrontAccessLogsBucket.Arn}/*"
            Condition:
              Bool:
                "aws:SecureTransport": "false"
